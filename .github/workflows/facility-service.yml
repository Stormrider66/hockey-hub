name: Facility Service CI/CD

on:
  push:
    paths:
      - 'services/facility-service/**'
      - '.github/workflows/facility-service.yml'
  pull_request:
    paths:
      - 'services/facility-service/**'

jobs:
  test:
    name: Test Facility Service
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: services/facility-service/package-lock.json
          
      - name: Install dependencies
        run: cd services/facility-service && npm ci
        
      - name: Run linting
        run: cd services/facility-service && npm run lint
        
      - name: Run unit tests
        run: cd services/facility-service && npm run test
        
      - name: Test facility management
        run: cd services/facility-service && npm run test:facility-management
        
      - name: Test resource allocation
        run: cd services/facility-service && npm run test:resource-allocation
        
      - name: Test equipment tracking
        run: cd services/facility-service && npm run test:equipment
        
      - name: Test maintenance scheduling
        run: cd services/facility-service && npm run test:maintenance
        
  integration-test:
    name: Integration Testing
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: facility_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies
        run: cd services/facility-service && npm ci
        
      - name: Run database migrations
        run: cd services/facility-service && npm run migrate
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: facility_test
          
      - name: Run integration tests
        run: cd services/facility-service && npm run test:integration
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: facility_test
          
  capacity-testing:
    name: Capacity Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies
        run: cd services/facility-service && npm ci
        
      - name: Run capacity load tests
        run: cd services/facility-service && npm run test:capacity
        
      - name: Run peak-time simulation
        run: cd services/facility-service && npm run test:peak-simulation
        
  build:
    name: Build Facility Service
    needs: [test, integration-test, capacity-testing]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./services/facility-service
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-facility-service:${{ env.BRANCH_NAME }}
            ghcr.io/${{ github.repository }}-facility-service:${{ github.sha }} 