name: Medical Service CI/CD

on:
  push:
    paths:
      - 'services/medical-service/**'
      - '.github/workflows/medical-service.yml'
  pull_request:
    paths:
      - 'services/medical-service/**'

jobs:
  test:
    name: Test Medical Service
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
          
      - name: Enable corepack & install pnpm
        run: corepack enable
        
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --filter "medical-service..."
        
      - name: Run linting
        run: pnpm --filter "medical-service" run lint
        
      - name: Run tests
        run: pnpm --filter "medical-service" run test
        
      - name: Verify data encryption
        run: cd services/medical-service && npm run test:encryption
        
      - name: Test access control
        run: cd services/medical-service && npm run test:access-control
        
      - name: Verify GDPR compliance
        run: cd services/medical-service && npm run test:gdpr
        
  security-scan:
    name: Medical Data Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run OWASP ZAP scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:3005'
          cmd_options: '-a'
          
      - name: Check for sensitive data patterns
        run: |
          cd services/medical-service
          npm ci
          npm run scan:sensitive-data
          
  build:
    name: Build Medical Service
    needs: [test, security-scan]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-medical-service
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
        
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./services/medical-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
