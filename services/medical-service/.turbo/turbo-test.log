
> medical-service@1.0.1 test C:\Hockey Hub\services\medical-service
> jest

PASS test/unit/treatmentPlanRepository.test.ts (25.907 s)
  ‚óè Console

    console.error
      [DB Error] Failed to find treatment plans for injury i1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:38:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:37:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 23 |[39m     [36mreturn[39m result[33m.[39mrows[33m;[39m
     [90m 24 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 25 |[39m     console[33m.[39merror([32m'[DB Error] Failed to find treatment plans for injury'[39m[33m,[39m injuryId[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 26 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while fetching treatment plans.'[39m)[33m;[39m
     [90m 27 |[39m   }
     [90m 28 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentPlanRepository.ts:25:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanRepository.ts:2003:32)

    console.error
      [DB Error] Failed to create treatment plan Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:58:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:57:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 50 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 51 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 52 |[39m     console[33m.[39merror([32m'[DB Error] Failed to create treatment plan'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 53 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while creating treatment plan.'[39m)[33m;[39m
     [90m 54 |[39m   }
     [90m 55 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentPlanRepository.ts:52:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanRepository.ts:2003:32)

    console.error
      [DB Error] Failed to update treatment plan p1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:89:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:88:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 104 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 105 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 106 |[39m     console[33m.[39merror([32m'[DB Error] Failed to update treatment plan'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 107 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while updating treatment plan.'[39m)[33m;[39m
     [90m 108 |[39m   }
     [90m 109 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentPlanRepository.ts:106:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanRepository.ts:2003:32)

    console.error
      [DB Error] Failed to delete treatment plan p1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:115:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanRepository.test.ts:114:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 114 |[39m     [36mreturn[39m (result[33m.[39mrowCount [33m?[39m[33m?[39m [35m0[39m) [33m>[39m [35m0[39m[33m;[39m
     [90m 115 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 116 |[39m     console[33m.[39merror([32m'[DB Error] Failed to delete treatment plan'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 117 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while deleting treatment plan.'[39m)[33m;[39m
     [90m 118 |[39m   }
     [90m 119 |[39m }[33m;[39m [0m

      at error (src/repositories/treatmentPlanRepository.ts:116:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanRepository.ts:2003:32)

PASS test/unit/treatmentPlanItemRepository.test.ts (25.84 s)
  ‚óè Console

    console.error
      [DB Error] Failed to find treatment plan items for plan p1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:38:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:37:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 25 |[39m     [36mreturn[39m result[33m.[39mrows[33m;[39m
     [90m 26 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 27 |[39m     console[33m.[39merror([32m'[DB Error] Failed to find treatment plan items for plan'[39m[33m,[39m planId[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 28 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while fetching treatment plan items.'[39m)[33m;[39m
     [90m 29 |[39m   }
     [90m 30 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentPlanItemRepository.ts:27:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanItemRepository.ts:2306:32)

    console.error
      [DB Error] Failed to create treatment plan item Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:58:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:57:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 54 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 55 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 56 |[39m     console[33m.[39merror([32m'[DB Error] Failed to create treatment plan item'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 57 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while creating treatment plan item.'[39m)[33m;[39m
     [90m 58 |[39m   }
     [90m 59 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentPlanItemRepository.ts:56:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanItemRepository.ts:2306:32)

    console.error
      [DB Error] Failed to update treatment plan item i1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:90:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:89:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m  98 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m  99 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 100 |[39m     console[33m.[39merror([32m'[DB Error] Failed to update treatment plan item'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 101 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while updating treatment plan item.'[39m)[33m;[39m
     [90m 102 |[39m   }
     [90m 103 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentPlanItemRepository.ts:100:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanItemRepository.ts:2306:32)

    console.error
      [DB Error] Failed to delete treatment plan item i1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:116:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentPlanItemRepository.test.ts:115:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 108 |[39m     [36mreturn[39m (result[33m.[39mrowCount [33m?[39m[33m?[39m [35m0[39m) [33m>[39m [35m0[39m[33m;[39m
     [90m 109 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 110 |[39m     console[33m.[39merror([32m'[DB Error] Failed to delete treatment plan item'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 111 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while deleting treatment plan item.'[39m)[33m;[39m
     [90m 112 |[39m   }
     [90m 113 |[39m }[33m;[39m [0m

      at error (src/repositories/treatmentPlanItemRepository.ts:110:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentPlanItemRepository.ts:2306:32)

PASS test/unit/treatmentRepository.test.ts (26.209 s)
  ‚óè Console

    console.error
      [DB Error] Failed to find treatments for injury inj1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:30:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:29:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 10 |[39m         [36mreturn[39m result[33m.[39mrows[33m;[39m
     [90m 11 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 12 |[39m         console[33m.[39merror([32m'[DB Error] Failed to find treatments for injury'[39m[33m,[39m injuryId[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 13 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while fetching treatments.'[39m)[33m;[39m
     [90m 14 |[39m     }
     [90m 15 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentRepository.ts:12:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentRepository.ts:1902:32)

    console.error
      [DB Error] Failed to create treatment Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:50:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:49:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 34 |[39m         [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 35 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 36 |[39m         console[33m.[39merror([32m'[DB Error] Failed to create treatment'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 37 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while creating treatment.'[39m)[33m;[39m
     [90m 38 |[39m     }
     [90m 39 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentRepository.ts:36:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentRepository.ts:1902:32)

    console.error
      [DB Error] Failed to update treatment t1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:81:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:80:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 82 |[39m         [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 83 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 84 |[39m         console[33m.[39merror([32m'[DB Error] Failed to update treatment'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 85 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while updating treatment.'[39m)[33m;[39m
     [90m 86 |[39m     }
     [90m 87 |[39m }[33m;[39m[0m

      at error (src/repositories/treatmentRepository.ts:84:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentRepository.ts:1902:32)

    console.error
      [DB Error] Failed to delete treatment t1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:107:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\treatmentRepository.test.ts:106:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 92 |[39m         [36mreturn[39m result[33m.[39mrowCount [33m>[39m [35m0[39m[33m;[39m
     [90m 93 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 94 |[39m         console[33m.[39merror([32m'[DB Error] Failed to delete treatment'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 95 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while deleting treatment.'[39m)[33m;[39m
     [90m 96 |[39m     }
     [90m 97 |[39m }[33m;[39m [0m

      at error (src/repositories/treatmentRepository.ts:94:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/treatmentRepository.ts:1902:32)

PASS test/unit/medicalDocumentRepository.test.ts
  ‚óè Console

    console.error
      [DB Error] Failed to create medical document Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:33:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:32:46)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 64 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 65 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 66 |[39m     console[33m.[39merror([32m'[DB Error] Failed to create medical document'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 67 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while creating medical document.'[39m)[33m;[39m
     [90m 68 |[39m   }
     [90m 69 |[39m }[33m;[39m[0m

      at error (src/repositories/medicalDocumentRepository.ts:66:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/medicalDocumentRepository.ts:1364:32)

    console.error
      [DB Error] Failed to fetch medical document d1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:58:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:57:46)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 79 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m] [33m||[39m [36mnull[39m[33m;[39m
     [90m 80 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 81 |[39m     console[33m.[39merror([32m'[DB Error] Failed to fetch medical document'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 82 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while fetching medical document.'[39m)[33m;[39m
     [90m 83 |[39m   }
     [90m 84 |[39m }[33m;[39m[0m

      at error (src/repositories/medicalDocumentRepository.ts:81:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/medicalDocumentRepository.ts:1364:32)

    console.error
      [DB Error] Failed to delete medical document d1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:81:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\medicalDocumentRepository.test.ts:80:46)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 94 |[39m     [36mreturn[39m (result[33m.[39mrowCount [33m?[39m[33m?[39m [35m0[39m) [33m>[39m [35m0[39m[33m;[39m
     [90m 95 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 96 |[39m     console[33m.[39merror([32m'[DB Error] Failed to delete medical document'[39m[33m,[39m id[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 97 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while deleting medical document.'[39m)[33m;[39m
     [90m 98 |[39m   }
     [90m 99 |[39m }[33m;[39m [0m

      at error (src/repositories/medicalDocumentRepository.ts:96:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/medicalDocumentRepository.ts:1364:32)

PASS test/unit/playerAvailabilityRepository.test.ts
  ‚óè Console

    console.error
      [DB Error] Failed to fetch availability for player p1 Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:45:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:44:46)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 32 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m] [33m||[39m [36mnull[39m[33m;[39m
     [90m 33 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 34 |[39m     console[33m.[39merror([32m'[DB Error] Failed to fetch availability for player'[39m[33m,[39m playerId[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 35 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while fetching availability status.'[39m)[33m;[39m
     [90m 36 |[39m   }
     [90m 37 |[39m }[33m;[39m[0m

      at error (src/repositories/playerAvailabilityRepository.ts:34:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/playerAvailabilityRepository.ts:1248:32)

    console.error
      [DB Error] Failed to create availability status Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:70:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:8:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:4:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\playerAvailabilityRepository.test.ts:69:46)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 81 |[39m     [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 82 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 83 |[39m     console[33m.[39merror([32m'[DB Error] Failed to create availability status'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 84 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while creating availability status.'[39m)[33m;[39m
     [90m 85 |[39m   }
     [90m 86 |[39m }[33m;[39m [0m

      at error (src/repositories/playerAvailabilityRepository.ts:83:13)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/playerAvailabilityRepository.ts:1248:32)

PASS test/unit/injuryRepository.test.ts (28.13 s)
  ‚óè Console

    console.log
      [DB Query] Finding injuries: SELECT * FROM injuries WHERE organization_id = $1 ORDER BY date_occurred DESC LIMIT $2 OFFSET $3 [ 'org1', 10, 0 ]

      at log (src/repositories/injuryRepository.ts:40:13)

    console.log
      [DB Success] Found 1 injuries

      at log (src/repositories/injuryRepository.ts:43:17)

    console.log
      [DB Query] Finding injuries: SELECT * FROM injuries WHERE organization_id = $1 ORDER BY date_occurred DESC LIMIT $2 OFFSET $3 [ 'org1', 10, 0 ]

      at log (src/repositories/injuryRepository.ts:40:13)

    console.error
      [DB Error] Failed to find injuries: Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:27:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:31:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:27:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:26:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 44 |[39m         [36mreturn[39m result[33m.[39mrows[33m;[39m
     [90m 45 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 46 |[39m         console[33m.[39merror([32m'[DB Error] Failed to find injuries:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 47 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while fetching injuries.'[39m)[33m;[39m
     [90m 48 |[39m     }
     [90m 49 |[39m }[33m;[39m[0m

      at error (src/repositories/injuryRepository.ts:46:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/injuryRepository.ts:3760:32)

    console.log
      [DB Query] Counting injuries: SELECT COUNT(*) FROM injuries WHERE organization_id = $1 [ 'org1' ]

      at log (src/repositories/injuryRepository.ts:70:13)

    console.log
      [DB Success] Counted 5 injuries

      at log (src/repositories/injuryRepository.ts:74:17)

    console.log
      [DB Query] Counting injuries: SELECT COUNT(*) FROM injuries WHERE organization_id = $1 [ 'org1' ]

      at log (src/repositories/injuryRepository.ts:70:13)

    console.error
      [DB Error] Failed to count injuries: Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:43:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:31:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:27:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:42:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 75 |[39m         [36mreturn[39m count[33m;[39m
     [90m 76 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 77 |[39m         console[33m.[39merror([32m'[DB Error] Failed to count injuries:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 78 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while counting injuries.'[39m)[33m;[39m
     [90m 79 |[39m     }
     [90m 80 |[39m }[33m;[39m[0m

      at error (src/repositories/injuryRepository.ts:77:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/injuryRepository.ts:3760:32)

    console.log
      [DB Query] Finding injury by ID: SELECT * FROM injuries WHERE id = $1 AND organization_id = $2 [ 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:87:13)

    console.log
      [DB Success] Found injury i1

      at log (src/repositories/injuryRepository.ts:93:17)

    console.log
      [DB Query] Finding injury by ID: SELECT * FROM injuries WHERE id = $1 AND organization_id = $2 [ 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:87:13)

    console.log
      [DB Query] Finding injury by ID: SELECT * FROM injuries WHERE id = $1 AND organization_id = $2 [ 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:87:13)

    console.error
      [DB Error] Failed to find injury i1: Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:71:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:31:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:27:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:70:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 94 |[39m         [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 95 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 96 |[39m         console[33m.[39merror([32m`[DB Error] Failed to find injury ${id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 97 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while fetching injury by ID.'[39m)[33m;[39m
     [90m 98 |[39m     }
     [90m 99 |[39m }[33m;[39m[0m

      at error (src/repositories/injuryRepository.ts:96:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/injuryRepository.ts:3760:32)

    console.log
      [DB Query] Creating injury: 
              INSERT INTO injuries (
                  player_id, team_id, organization_id, date_occurred, date_reported, 
                  body_part, injury_type, mechanism, severity, description, diagnosis, 
                  estimated_return_date, reported_by_user_id, status
              )
              VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
              RETURNING *
           [
        'p1',
        null,
        'org1',
        2025-05-28T09:51:31.767Z,
        2025-05-28T09:51:31.767Z,
        'leg',
        'sprain',
        null,
        'unknown',
        null,
        null,
        null,
        'u1',
        'active'
      ]

      at log (src/repositories/injuryRepository.ts:123:13)

    console.log
      [DB Success] Injury created: {
        id: 'i1',
        playerId: 'p1',
        teamId: null,
        organizationId: 'org1',
        dateOccurred: 2025-05-28T09:51:31.767Z,
        dateReported: 2025-05-28T09:51:31.767Z,
        bodyPart: 'leg',
        injuryType: 'sprain',
        mechanism: null,
        severity: 'unknown',
        description: null,
        diagnosis: null,
        estimatedReturnDate: null,
        reportedByUserId: 'u1',
        status: 'active',
        createdAt: 2025-05-28T09:51:31.767Z,
        updatedAt: 2025-05-28T09:51:31.767Z
      }

      at log (src/repositories/injuryRepository.ts:126:17)

    console.log
      [DB Query] Creating injury: 
              INSERT INTO injuries (
                  player_id, team_id, organization_id, date_occurred, date_reported, 
                  body_part, injury_type, mechanism, severity, description, diagnosis, 
                  estimated_return_date, reported_by_user_id, status
              )
              VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
              RETURNING *
           [
        undefined,
        null,
        undefined,
        undefined,
        2025-05-28T09:51:32.608Z,
        undefined,
        undefined,
        null,
        'unknown',
        null,
        null,
        null,
        null,
        'active'
      ]

      at log (src/repositories/injuryRepository.ts:123:13)

    console.error
      [DB Error] Failed to create injury: Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:106:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:31:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:27:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:105:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 127 |[39m         [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 128 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 129 |[39m         console[33m.[39merror([32m'[DB Error] Failed to create injury:'[39m[33m,[39m error)[33m;[39m
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 130 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while creating injury.'[39m)[33m;[39m
     [90m 131 |[39m     }
     [90m 132 |[39m }[33m;[39m[0m

      at error (src/repositories/injuryRepository.ts:129:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/injuryRepository.ts:3760:32)

    console.log
      [DB Query] Updating injury: UPDATE injuries SET body_part = $1, updated_at = NOW() WHERE id = $2 AND organization_id = $3 RETURNING * [ 'leg', 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:159:13)

    console.log
      [DB Success] Injury updated: { id: 'i1' }

      at log (src/repositories/injuryRepository.ts:165:17)

    console.log
      [DB Query] Updating injury: UPDATE injuries SET body_part = $1, updated_at = NOW() WHERE id = $2 AND organization_id = $3 RETURNING * [ 'leg', 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:159:13)

    console.log
      [DB Query] Updating injury: UPDATE injuries SET body_part = $1, updated_at = NOW() WHERE id = $2 AND organization_id = $3 RETURNING * [ 'leg', 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:159:13)

    console.error
      [DB Error] Failed to update injury i1: Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:131:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:31:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:27:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:130:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 166 |[39m         [36mreturn[39m result[33m.[39mrows[[35m0[39m][33m;[39m
     [90m 167 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 168 |[39m         console[33m.[39merror([32m`[DB Error] Failed to update injury ${id}:`[39m[33m,[39m error)[33m;[39m
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 169 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while updating injury.'[39m)[33m;[39m
     [90m 170 |[39m     }
     [90m 171 |[39m }[33m;[39m[0m

      at error (src/repositories/injuryRepository.ts:168:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/injuryRepository.ts:3760:32)

    console.log
      [DB Query] Deleting injury: DELETE FROM injuries WHERE id = $1 AND organization_id = $2 [ 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:180:13)

    console.log
      [DB Success] Injury i1 deletion attempt result: true

      at log (src/repositories/injuryRepository.ts:184:17)

    console.log
      [DB Query] Deleting injury: DELETE FROM injuries WHERE id = $1 AND organization_id = $2 [ 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:180:13)

    console.log
      [DB Success] Injury i1 deletion attempt result: false

      at log (src/repositories/injuryRepository.ts:184:17)

    console.log
      [DB Query] Deleting injury: DELETE FROM injuries WHERE id = $1 AND organization_id = $2 [ 'i1', 'org1' ]

      at log (src/repositories/injuryRepository.ts:180:13)

    console.error
      [DB Error] Failed to delete injury i1: Error: fail
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:157:40
          at Generator.next (<anonymous>)
          at C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:31:71
          at new Promise (<anonymous>)
          at Object.<anonymous>.__awaiter (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:27:12)
          at Object.<anonymous> (C:\Hockey Hub\services\medical-service\test\unit\injuryRepository.test.ts:156:54)
          at Promise.then.completed (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\utils.js:231:10)
          at _callCircusTest (C:\Hockey Hub\node_modules\.pnpm\jest-circus@29.7.0\node_modules\jest-circus\build\run.js:316:40)

    [0m [90m 185 |[39m         [36mreturn[39m deleted[33m;[39m
     [90m 186 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 187 |[39m         console[33m.[39merror([32m`[DB Error] Failed to delete injury ${id}:`[39m[33m,[39m error)[33m;[39m
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 188 |[39m         [90m// Handle FK constraint errors if cascades aren't set up[39m
     [90m 189 |[39m         [36mthrow[39m [36mnew[39m [33mError[39m([32m'Database error while deleting injury.'[39m)[33m;[39m
     [90m 190 |[39m     }[0m

      at error (src/repositories/injuryRepository.ts:187:17)
          at Generator.throw (<anonymous>)
      at rejected (src/repositories/injuryRepository.ts:3760:32)

PASS test/integration/treatmentRoutes.test.ts (28.783 s)
  ‚óè Console

    console.log
      [DB] Pool created for medical database: hockeyhub_medical on localhost:5432

      at Object.log (src/db/index.ts:35:9)

PASS test/integration/treatmentPlanItemRoutes.test.ts (29.445 s)
PASS test/integration/treatmentPlanRoutes.test.ts (30.15 s)
PASS test/integration/playerAvailabilityRoutes.test.ts
PASS test/integration/medicalDocumentRoutes.test.ts (6.389 s)
----------------------------------|---------|----------|---------|---------|--------------------------------------------------------------------------
File                              | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                        
----------------------------------|---------|----------|---------|---------|--------------------------------------------------------------------------
All files                         |   60.89 |    43.07 |   62.99 |   62.54 |                                                                          
 src                              |       0 |        0 |       0 |       0 |                                                                          
  data-source.ts                  |       0 |        0 |       0 |       0 | 1-48                                                                     
  index.ts                        |       0 |        0 |       0 |       0 | 1-88                                                                     
 src/controllers                  |   56.86 |    27.95 |      60 |   52.47 |                                                                          
  injuryController.ts             |   41.08 |    14.54 |   36.36 |   35.51 | 9-46,51-66,71-96,101-125,130-144,150-152,156-158,168,182,185,198,222,235 
  medicalDocumentController.ts    |   36.98 |     6.66 |      25 |   33.84 | 11-53,58-70,75-89,103,110                                                
  playerAvailabilityController.ts |    92.3 |    66.66 |     100 |    90.9 | 13,50                                                                    
  treatmentPlanController.ts      |   86.36 |       75 |     100 |   83.33 | 10,26,29,44,70,83                                                        
  treatmentPlanItemController.ts  |    87.8 |       80 |     100 |   84.84 | 10,28,45,68,81                                                           
 src/db                           |   76.47 |    93.33 |       0 |   76.47 |                                                                          
  index.ts                        |   76.47 |    93.33 |       0 |   76.47 | 26,30,38-39                                                              
 src/entities                     |       0 |      100 |       0 |       0 |                                                                          
  Injury.ts                       |       0 |      100 |       0 |       0 | 1-62                                                                     
  MedicalAssessment.ts            |       0 |      100 |       0 |       0 | 1-42                                                                     
  MedicalNote.ts                  |       0 |      100 |       0 |       0 | 1-43                                                                     
  PlayerMedicalJournal.ts         |       0 |      100 |     100 |       0 | 1-39                                                                     
  PlayerStatusUpdate.ts           |       0 |      100 |       0 |       0 | 1-46                                                                     
 src/lib                          |   57.14 |      100 |       0 |   57.14 |                                                                          
  s3.ts                           |   57.14 |      100 |       0 |   57.14 | 9-10,14-15,19-20                                                         
 src/middleware                   |   46.15 |    23.07 |      50 |   43.47 |                                                                          
  auth.ts                         |   46.15 |    23.07 |      50 |   43.47 | 7-20,29,35                                                               
 src/repositories                 |   85.38 |    68.31 |     100 |   95.16 |                                                                          
  injuryRepository.ts             |      80 |     62.5 |     100 |   99.03 | 151                                                                      
  medicalDocumentRepository.ts    |     100 |     87.5 |     100 |     100 | 94                                                                       
  playerAvailabilityRepository.ts |     100 |      100 |     100 |     100 |                                                                          
  treatmentPlanItemRepository.ts  |   80.55 |    63.63 |     100 |     100 | 78-84,108                                                                
  treatmentPlanRepository.ts      |    87.3 |    61.53 |     100 |   85.96 | 75-76,79-80,83-84,87-88                                                  
  treatmentRepository.ts          |      90 |       70 |     100 |   88.88 | 54-55,62-63,66-67                                                        
 src/routes                       |     100 |      100 |     100 |     100 |                                                                          
  injuryRoutes.ts                 |     100 |      100 |     100 |     100 |                                                                          
  medicalDocumentRoutes.ts        |     100 |      100 |     100 |     100 |                                                                          
  playerAvailabilityRoutes.ts     |     100 |      100 |     100 |     100 |                                                                          
  treatmentPlanItemRoutes.ts      |     100 |      100 |     100 |     100 |                                                                          
  treatmentPlanRoutes.ts          |     100 |      100 |     100 |     100 |                                                                          
  treatmentRoutes.ts              |     100 |      100 |     100 |     100 |                                                                          
----------------------------------|---------|----------|---------|---------|--------------------------------------------------------------------------

Test Suites: 11 passed, 11 total
Tests:       85 passed, 85 total
Snapshots:   0 total
Time:        51.622 s
Ran all test suites.
