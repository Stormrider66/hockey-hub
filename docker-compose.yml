version: '3.8'\n\nservices:\n  # PostgreSQL Database\n  db:\n    image: postgres:17-alpine # Use PostgreSQL 17 as per database-schema.md\n    container_name: hockeyhub_db\n    restart: unless-stopped\n    environment:\n      POSTGRES_DB: ${POSTGRES_DB:-hockeyhub_dev}\n      POSTGRES_USER: ${POSTGRES_USER:-hockeyhub_user}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hockeyhub_password}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    ports:\n      - \"${DB_PORT:-5432}:5432\"\n    networks:\n      - hockeyhub_network\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U ${POSTGRES_USER:-hockeyhub_user} -d ${POSTGRES_DB:-hockeyhub_dev}\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  # --- Placeholder for Backend Services --- \n  # Example User Service (to be defined later)\n  # user-service:\n  #   build:\n  #     context: ./services/user-service\n  #     dockerfile: Dockerfile\n  #   container_name: hockeyhub_user_service\n  #   ports:\n  #     - \"3001:3001\"\n  #   environment:\n  #     - DATABASE_URL=postgresql://${POSTGRES_USER:-hockeyhub_user}:${POSTGRES_PASSWORD:-hockeyhub_password}@db:5432/${POSTGRES_DB:-hockeyhub_dev}\n  #     - NODE_ENV=development\n  #   depends_on:\n  #     db: \n  #       condition: service_healthy \n  #   networks:\n  #     - hockeyhub_network\n  #   volumes:\n  #     - ./services/user-service:/usr/src/app\n  #     - /usr/src/app/node_modules # Prevent host node_modules from overwriting container's\n\n  # --- Frontend App --- \n  frontend:\n    build:\n      context: ./apps/frontend\n      dockerfile: Dockerfile\n    container_name: hockeyhub_frontend\n    ports:\n      - \"${FRONTEND_PORT:-3000}:80\" # Map host 3000 to container 80 (Nginx)\n    # No environment needed for static build unless during build stage\n    # No volumes needed for static build in production, but useful for dev\n    # environment:\n    #   - NODE_ENV=development\n    networks:\n      - hockeyhub_network\n    # Volumes for development (hot-reloading) - requires different Dockerfile setup\n    # volumes:\n    #   - ./apps/frontend:/app\n    #   - /app/node_modules\n\nvolumes:\n  postgres_data:\n    driver: local\n\nnetworks:\n  hockeyhub_network:\n    driver: bridge